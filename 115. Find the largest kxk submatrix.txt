115. Find the largest kxk submatrix with all entries 1 in a mxn binary matrix
code:
def printMaxSubSquare(M):
	R = len(M)
	C = len(M[0]) 
	S = []
	for i in range(R):
		temp = []
		for j in range(C):
			if i == 0 or j == 0:
				temp += M[i][j],
			else:
				temp += 0,
		S += temp,
	for i in range(1, R):
		for j in range(1, C):
			if (M[i][j] == 1):
				S[i][j] = min(S[i][j-1], S[i-1][j],S[i-1][j-1]) + 1
			else:
				S[i][j] = 0
	max_of_s = S[0][0]
	max_i = 0
	max_j = 0
	for i in range(R):
		for j in range(C):
			if (max_of_s < S[i][j]):
				max_of_s = S[i][j]
				max_i = i
				max_j = j
	print("Maximum size sub-matrix is: ")
	for i in range(max_i, max_i - max_of_s, -1):
		for j in range(max_j, max_j - max_of_s, -1):
			print(M[i][j], end=" ")
		print("")
M = [[0, 1, 1, 0, 1],
	[1, 1, 0, 1, 0],
	[0, 1, 1, 1, 0],
	[1, 1, 1, 1, 0],
	[1, 1, 1, 1, 1],
	[0, 0, 0, 0, 0]]
printMaxSubSquare(M)

output:
Maximum size sub-matrix is: 
1 1 1 
1 1 1 
1 1 1 


